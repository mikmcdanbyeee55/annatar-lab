stages:
  - test
  - docker_build
  - docker_push

variables:
  DOCKER_IMAGE_NAME: $CI_REGISTRY_IMAGE
  DOCKER_DRIVER: overlay2
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_PUSH: --push

services:
  - name: docker:dind
    alias: docker
    entrypoint: ["dockerd-entrypoint.sh", "--tls=false"]

test:
  stage: test
  image: python:3.11-slim
  artifacts:
    reports:
      junit: report.xml
  variables:
    PYTEST_FLAGS: --junitxml report.xml
  script:
    - apt-get update && apt-get install make
    - pip install poetry
    - poetry install
    - make test

amd64_build:
  stage: docker_build
  image: docker:latest
  variables:
    BUILD_ARCH: linux/amd64
  before_script:
    - 'if [ "$CI_COMMIT_BRANCH" = "master" ]; then export IMAGE_TAG=latest; else export IMAGE_TAG=$(echo $CI_COMMIT_REF_NAME | sed -e "s/[^a-zA-Z0-9_.-]/-/g"); fi'
    - echo "Image tag set to $IMAGE_TAG"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - apk add --no-cache make git
    - make container

arm64_build:
  stage: docker_build
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /arm64$/'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  image: docker:latest
  variables:
    BUILD_ARCH: linux/arm64
  before_script:
    - 'if [ "$CI_COMMIT_BRANCH" = "master" ]; then export IMAGE_TAG=latest; else export IMAGE_TAG=$(echo $CI_COMMIT_REF_NAME | sed -e "s/[^a-zA-Z0-9_.-]/-/g"); fi'
    - echo "Image tag set to $IMAGE_TAG"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - apk add --no-cache qemu qemu-img git make
    - make container

docker_manifest:
  stage: docker_push
  image: docker:latest
  variables:
    BUILD_ARCH: linux/arm64
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /arm64$/'
    - if: '$CI_COMMIT_BRANCH == "master"'
  before_script:
    - 'if [ "$CI_COMMIT_BRANCH" = "master" ]; then export IMAGE_TAG=latest; else export IMAGE_TAG=$(echo $CI_COMMIT_REF_NAME | sed -e "s/[^a-zA-Z0-9_.-]/-/g"); fi'
    - echo "Image tag set to $IMAGE_TAG"
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - apk add --no-cache qemu qemu-img git make
    - make docker-manifest
