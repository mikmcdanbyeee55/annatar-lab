"""
This type stub file was generated by pyright.
"""

"""
This type stub file was generated by pyright.
"""
logger = ...
original_classes = ...
Redis_Patched = ...
StrictRedis_Patched = ...
def patch_redis_Redis(dbfile=...):
    """
    This class patches the redis module to replace the :class:`redis.Redis()`
    class with the redislite enhanced :class:`redislite.Redis()` class that uses
    the embedded redis server.


    Example:
        patch_redis_Redis('/tmp/redis.db')


    Notes:
        If the dbfile parameter is not passed, each instance of the
        redis.Redis() class with no arguments will get a separate redis
        server.  If the dbfile parameter is provided, all instances of
        the redis.Redis() class without a host or path argument will
        share/reference the same redis server.

    Args:
        dbfile(str):
            The name of the Redis db file to be used.  If this argument is
            passed all instances of the :class:`redis.Redis` class will share a
            single embedded redis server.

    Returns:
        This function does not return any values.
    """
    ...

def unpatch_redis_Redis():
    """
    This class unpatches the :class:`redis.Redis()` class of the redis module
    and restores the original :class:`redis.Redis()`  class.


    Example:
        unpatch_redis_Redis()


    Returns:
        This function does not return any values.
    """
    ...

def patch_redis_StrictRedis(dbfile=...):
    """
    This class patches the redis module to replace the
    :param dbfile:
    :class:`redis.StrictRedis()` class with the redislite enhanced
    :class:`redislite.StrictRedis()` class that uses the embedded redis server.


    Example:
        patch_redis_StrictRedis('/tmp/redis.db')


    Notes:
        If the dbfile parameter is not passed, all :class:`redis.StrictRedis()`
        class with no arguments will get a separate redis server.  If the
        dbfile parameter is provided, all instances of the
        :class:`redis.Redis()` class passed with the same dbfile value
        will share/reference the same redis server.

    Args:
        dbfile(str):
            The name of the Redis db file to be used.  If this argument is
            passed all instances of the :class:`redis.Redis` class will share
            a single instance of the embedded redis server.

    Returns:
        This function does not return any values.
    """
    ...

def unpatch_redis_StrictRedis():
    """
    This class unpatches the :class:`redis.StrictRedis()` class of the redis
    module and restores the original :class:`redis.StrictRedis()`  class.


    Example:
        unpatch_redis_StrictRedis()


    Returns:
        This function does not return any values.
    """
    ...

def patch_redis(dbfile=...):
    """
    Patch all the redis classes provided by redislite that have been patched.


    Example:
        patch_redis('/tmp/redis.db')


    Notes:
        If the dbfile parameter is not passed, each any instances of
        :class:`redis.StrictRedis()` class with no arguments will get a unique
        instance of the redis server.  If the dbfile parameter is provided, all
        instances of :class:`redis.Redis()` will share/reference the same
        instance of the redis server.

    Args:
        dbfile(str):
            The name of the Redis db file to be used.  If this argument is
            passed all instances of the :class:`redis.Redis()` class will
            share a single instance of the embedded redis server.

    Returns:
        This function does not return any values.
    """
    ...

def unpatch_redis():
    """
    Unpatch all the redis classes provided by :mod:`redislite` that have been
    patched.

    Example:
        unpatch_redis()
    """
    ...

